// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  email               String?               @unique @db.VarChar(255)
  password            String?               @db.VarChar(255)
  githubId            Int?                  @unique
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Session             Session[]
  Enrollment          Enrollment[]
  Reservation         Reservation[]
  ActivityReservation ActivityReservation[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  cpf       String    @db.VarChar(255)
  birthday  DateTime
  phone     String    @db.VarChar(255)
  userId    Int       @unique
  User      User      @relation(fields: [userId], references: [id])
  Address   Address[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Address {
  id            Int        @id @default(autoincrement())
  cep           String     @db.VarChar(255)
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  addressDetail String?    @db.VarChar(255)
  enrollmentId  Int        @unique
  Enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Hotel {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(255)
  imageUrl String?
  Room     Room[]
}

model Room {
  id                    Int                     @id @default(autoincrement())
  code                  String                  @db.VarChar(255)
  hotelId               Int
  Hotel                 Hotel                   @relation(fields: [hotelId], references: [id])
  AccommodationTypeRoom AccommodationTypeRoom[]
  Reservation           Reservation[]
}

model AccommodationTypeRoom {
  id                  Int               @id @default(autoincrement())
  roomId              Int
  accommodationTypeId Int
  Room                Room              @relation(fields: [roomId], references: [id])
  AccommodationType   AccommodationType @relation(fields: [accommodationTypeId], references: [id])
}

model AccommodationType {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @unique @db.VarChar(255)
  capacity              Int
  AccommodationTypeRoom AccommodationTypeRoom[]
}

model Reservation {
  id          Int           @id @default(autoincrement())
  userId      Int           @unique
  roomId      Int?
  eventId     Int
  User        User          @relation(fields: [userId], references: [id])
  Room        Room?         @relation(fields: [roomId], references: [id])
  Transaction Transaction[]
}

model Transaction {
  id               Int         @id @default(autoincrement())
  hotelPrice       Int?
  hotelSelected    String?
  modalityPrice    Int
  modalitySelected String
  total            Int
  reservationId    Int
  Reservation      Reservation @relation(fields: [reservationId], references: [id])
}

model EventPlace {
  id       Int        @id @default(autoincrement())
  name     String
  Activity Activity[]
}

model Activity {
  id                  Int                   @id @default(autoincrement())
  name                String
  capacity            Int
  startTime           DateTime
  duration            Int
  eventPlaceId        Int
  EventPlace          EventPlace            @relation(fields: [eventPlaceId], references: [id])
  ActivityReservation ActivityReservation[]
}

model ActivityReservation {
  id         Int      @id @default(autoincrement())
  userId     Int
  activityId Int
  User       User     @relation(fields: [userId], references: [id])
  Activity   Activity @relation(fields: [activityId], references: [id])
}
